{"version":3,"file":"static/js/665.3fef851c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  padding: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  border-radius: 15px;\n  outline: none;\n  border: 1px solid green;\n  padding: 5px;\n  background-color: #ffffff;\n  box-shadow: 1px 2px 6px 0px rgba(65, 33, 83, 0.7);\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n\n  &:focus {\n    border-color: #dd00ff;\n  }\n`;\nexport const FormBtn = styled.button`\n  margin-top: 60px;\n  padding: 4px;\n  width: 10%;\n  height: 100%;\n  border-radius: 15px;\n  background: #a656dc;\n  border: none;\n  &:hover {\n    color: #fff;\n    background-color: #a656dc;\n    box-shadow: 1px 2px 6px 0px rgba(65, 33, 83, 0.7);\n  }\n  box-shadow: 0 2px 4px rgba(65, 33, 83, 0.7);\n`;\nexport const StyledError = styled.p`\n  color: red;\n  font-size: 12px;\n  border-radius: 25px;\n  padding: 2px 4px;\n  background-color: #fff;\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.div`\n  width: 450px;\n  display: flex;\n  justify-content: center;\n  border-radius: 6px;\n  gap: 10px;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  border-radius: 6px;\n  outline: none;\n  border: 1px solid green;\n  padding: 5px;\n  background-color: #ffffff;\n  box-shadow: 1px 2px 6px 0px rgba(65, 33, 83, 0.7);\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    & {\n      width: 500px;\n    }\n  }\n\n  &:focus {\n    background-color: #fff;\n\n    color: #750080;\n    border-color: #c800ff;\n  }\n\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { SearchForm, Input } from './ContactFilter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter);\n  const handleFilterChange = evt => {\n    dispatch(setFilter(evt.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <SearchForm>\n      <p>Find contacts by name</p>\n      <Input\n        name=\"search\"\n        type=\"text\"\n        value={filterValue}\n        onChange={handleFilterChange}\n      />\n    </SearchForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  display: flex;\n  justify-content: space-between;\n  color: black;\n  font-weight: 600;\n`;\n\nexport const ContactName = styled.p`\n  margin: 0px;\n  color: rgb(8, 38, 13);\n`;\n\nexport const DeleteButton = styled.button`\n  padding: 4px;\n  width: 30px;\n  height: 100%;\n  flex-shrink: 0;\n  border-radius: 15px;\n  background: #a656dc;\n  border: none;\n  &:hover {\n    color: #fff;\n    background-color: #a656dc;\n    box-shadow: 1px 2px 6px 0px rgba(65, 33, 83, 0.7);\n  }\n  box-shadow: 0 2px 4px rgba(65, 33, 83, 0.7);\n\n  @media screen and (max-width: 768px) {\n    font-size: 18px;\n    width: 50px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { List, Item, ContactName, DeleteButton } from './ContactList.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            <ContactName>\n              {name}: {number}\n            </ContactName>\n            <DeleteButton\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            ></DeleteButton>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contactcontactss.isLoading;\nexport const getError = state => state.tasks.error;\nexport const getFilter = state => state.filter;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport Notiflix from 'notiflix';\nimport { StyledForm, Input, FormBtn } from './ContactForm.styled.jsx';\nimport { getContacts } from '../../redux/contacts/selectors.js';\nimport { addContact } from '../../redux/contacts/operations.js';\nimport { setFilter } from '../../redux/contacts/filterSlice.js';\n\nconst schema = yup\n  .object()\n  .shape({\n    name: yup\n      .string()\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required('Name is required'),\n    number: yup\n      .string()\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required('Number is required'),\n  })\n  .required();\n\nexport function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: { name: '', number: '' },\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = ({ name, number }) => {\n    const contactExists = contacts.find(contact => contact.name === name);\n    if (contactExists) {\n      return Notiflix.Notify.failure(`${name} is already in contacts.`, 100);\n    }\n    dispatch(addContact({ name, number }));\n    dispatch(setFilter(''));\n    reset();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <label htmlFor=\"name\">Name</label>\n      <Input\n        {...register('name')}\n        type=\"text\"\n        id=\"name\"\n        placeholder=\"enter the contact name\"\n      />\n      <label htmlFor=\"number\">Number</label>\n      <Input\n        {...register('number')}\n        type=\"tel\"\n        id=\"number\"\n        placeholder=\"enter the contact number\"\n      />\n      <FormBtn type=\"submit\">Add contact</FormBtn>\n    </StyledForm>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Filter } from '../components/ContactFilter/ContactFilter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </section>\n  );\n}\n\nexport default Contacts;\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","FormBtn","_templateObject3","StyledError","_templateObject4","SearchForm","Filter","dispatch","useDispatch","filterValue","useSelector","state","filter","_jsxs","children","_jsx","name","type","value","onChange","evt","setFilter","currentTarget","toLowerCase","List","Item","ContactName","DeleteButton","ContactList","contacts","items","filteredContacts","contact","includes","map","_ref","id","number","onClick","deleteContact","getContacts","schema","yup","shape","matches","required","ContactForm","_useForm","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","reset","onSubmit","find","Notiflix","concat","addContact","htmlFor","_objectSpread","placeholder","useEffect","fetchContacts"],"sourceRoot":""}